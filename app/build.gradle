apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'AndResGuard'

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "me.luowl.wan"
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 4
        versionName "1.0.3"
        // Enabling multidex support.
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"]
            }
        }

        resConfigs "zh"
    }

    signingConfigs{
        release{
            keyAlias 'appkey'
            keyPassword '@myapp0701#!'
            storeFile file('../myapp.jks')
            storePassword '@myapp0701#'
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug{
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
            //启用混淆配置
            minifyEnabled true
            //Zip代码压缩优化
            zipAlignEnabled true
            //移除无用资源
            shrinkResources true
            pseudoLocalesEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        releaseLog {
            buildConfigField "boolean", "DEBUG_MODE", "false"
            buildConfigField "boolean", "LOG_DEBUG", "true"
            debuggable true
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "proguard-rules.pro"
            signingConfig signingConfigs.release

            matchingFallbacks = ['release']
        }
    }

    dataBinding{
        enabled true
    }

    andResGuard {
        // mappingFile = file("./resource_mapping.txt")
        mappingFile = null
        use7zip = true
        useSign = true
        // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
        keepRoot = false
        // 设置这个值，会把arsc name列混淆成相同的名字，减少string常量池的大小
        fixedResName = "arg"
        // 打开这个开关会合并所有哈希值相同的资源，但请不要过度依赖这个功能去除去冗余资源
        mergeDuplicatedRes = true
        whiteList = [
                // for your icon
                "R.drawable.icon",
                // for fabric
//                "R.string.com.crashlytics.*",
                // for google-services
                "R.string.google_app_id",
                "R.string.gcm_defaultSenderId",
                "R.string.default_web_client_id",
                "R.string.ga_trackingId",
                "R.string.firebase_database_url",
                "R.string.google_api_key",
                "R.string.google_crash_reporting_api_key"
        ]
        compressFilePattern = [
                "*.png",
                "*.jpg",
                "*.jpeg",
                "*.gif",
        ]
        sevenzip {
            artifact = 'com.tencent.mm:SevenZip:1.2.17'
            //path = "/usr/local/bin/7za"
        }

        /**
         * 可选： 如果不设置则会默认覆盖assemble输出的apk
         **/
        // finalApkBackupPath = "${project.rootDir}/final.apk"

        /**
         * 可选: 指定v1签名时生成jar文件的摘要算法
         * 默认值为“SHA-1”
         **/
        // digestalg = "SHA-256"
    }

}

task createVersionInformation {
    def resDir = new File(buildDir, 'generated/buildinfo/')
    def destDir = new File(resDir, 'META-INF/')

    android {
        sourceSets {
            main.resources {
                srcDir resDir
            }
        }
    }

    doLast {
        destDir.mkdirs()
        def vfile = new File(destDir, 'BUILD_INFO')

        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'log', '-1', '--format=%H'
            standardOutput = stdout
        }
        def git_hash = stdout.toString().trim()

        stdout.reset()
        exec {
            commandLine 'git', 'config', 'remote.origin.url'
            standardOutput = stdout
        }
        def remote = stdout.toString().trim()

        def dirty = exec {
            commandLine 'git', 'diff-index', '--quiet', 'HEAD'
            ignoreExitValue true
        }
        dirty = dirty.getExitValue() == 0 ? ' (Clean workspace)' : '-DIRTY using dirty workspace!'

        def repo_info = "$remote at $git_hash$dirty"

        vfile.text = "$repo_info\n"
    }
}

project.afterEvaluate {
    tasks.findAll { task -> task.name.startsWith('merge') && task.name.endsWith('Resources')
    }.each { t -> t.dependsOn createVersionInformation }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0-alpha02"
//    implementation 'org.litepal.android:kotlin:3.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.5.0'
    def lifecycle_version = "2.2.0"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.google.android:flexbox:2.0.1'

    def room_version = "2.3.0" // 2.1.0 for latest stable version
    implementation "androidx.room:room-runtime:$room_version"
    //annotationProcessor "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    implementation 'com.jeremyliao:live-event-bus-x:1.4.4'
    implementation 'com.tencent.sonic:sdk:3.1.0'
//    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.5'
    implementation 'com.jakewharton.timber:timber:4.7.1'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


}
